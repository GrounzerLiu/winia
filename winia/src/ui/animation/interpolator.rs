// mod tests {
//     use crate::ui::animation::interpolator::{EaseOutCirc, Interpolator};
//     use bezier_rs::{Bezier, TValue};
//
//     #[test]
//     fn test_ease_out_circ() {
//         let ease_out_circ = EaseOutCirc::new();
//         for i in 0..=100 {
//             let t = i as f32 / 100.0;
//             let eased_t = ease_out_circ.interpolate(t);
//             println!("({}, {}),", t, eased_t);
//         }
//     }
//
//     #[test]
//     fn test_generate_interpolator() {
//         generate_interpolator(0.075, 0.82, 0.165, 1.0);
//         // generate_interpolator(0.47, 0.0, 0.745, 0.715);
//     }
//
//     fn generate_interpolator(x1: f32, y1: f32, x2: f32, y2: f32) {
//         let bezier = Bezier::from_cubic_coordinates(0.0, 0.0, x1 as f64, y1 as f64, x2 as f64, y2 as f64, 1.0, 1.0);
//         for i in 0..=100 {
//             let t = i as f64 / 100.0;
//             let point = bezier.evaluate(TValue::Parametric(t));
//             print!("({}, {}),", point.x as f32, point.y as f32);
//             if i % 4 == 3 {
//                 println!("");
//             }
//         }
//     }
// }

pub trait Interpolator {
    fn interpolate(&self, x: f32) -> f32;
}

pub struct Linear {}
impl Default for Linear {
    fn default() -> Self {
        Self::new()
    }
}

impl Linear {
    pub fn new() -> Self {
        Self {}
    }
}

impl Interpolator for Linear {
    fn interpolate(&self, x: f32) -> f32 {
        x
    }
}

// 使用二分法查找x所在的区间
fn find_interval(points: &Vec<(f32, f32)>, x: f32) -> usize {
    let mut low = 0;
    let mut high = points.len() - 1;

    while high - low > 1 {
        let mid = (low + high) / 2;
        let (x_mid, _) = points[mid];

        if x_mid == x {
            return mid;
        } else if x_mid < x {
            low = mid;
        } else {
            high = mid;
        }
    }
    low
}

macro_rules! interpolator {
    ($name:ident, $map: expr) => {
        pub struct $name {
            points: Vec<(f32, f32)>,
        }
        impl Default for $name {
            fn default() -> Self {
                Self::new()
            }
        }
        impl $name {
            pub fn new() -> Self {
                Self { points: $map }
            }
        }
        impl Interpolator for $name {
            fn interpolate(&self, x: f32) -> f32 {
                if x < 0.0 {
                    return 0.0;
                } else if x > 1.0 {
                    return 1.0;
                }

                // 查找x所在的区间
                let idx = find_interval(&self.points, x);

                // 计算线性插值
                let (x1, y1) = self.points[idx];
                let (x2, y2) = self.points[idx + 1];
                ((y2 - y1) / (x2 - x1)) * (x - x1) + y1
            }
        }
    };
}

interpolator!(
    EaseOutCirc,
    vec![
        (0.0, 0.0),
        (0.00225523, 0.02440846),
        (0.0045238403, 0.04843568),
        (0.00681021, 0.07208442),
        (0.00911872, 0.09535744),
        (0.011453751, 0.1182575),
        (0.013819681, 0.14078736),
        (0.01622089, 0.16294979),
        (0.01866176, 0.18474752),
        (0.02114667, 0.20618334),
        (0.023680001, 0.22726),
        (0.026266132, 0.24798025),
        (0.028909441, 0.26834688),
        (0.03161431, 0.28836262),
        (0.034385122, 0.30803025),
        (0.037226252, 0.3273525),
        (0.04014208, 0.34633216),
        (0.04313699, 0.36497197),
        (0.046215363, 0.3832747),
        (0.049381573, 0.40124315),
        (0.052640002, 0.41888),
        (0.055995032, 0.43618807),
        (0.059451044, 0.4531701),
        (0.06301241, 0.4698288),
        (0.06668352, 0.48616704),
        (0.07046875, 0.5021875),
        (0.074372485, 0.51789296),
        (0.07839909, 0.53328615),
        (0.08255296, 0.54836994),
        (0.08683847, 0.56314695),
        (0.09126, 0.57761997),
        (0.09582193, 0.59179187),
        (0.10052864, 0.60566527),
        (0.105384514, 0.619243),
        (0.11039393, 0.6325278),
        (0.115561254, 0.6455225),
        (0.120890886, 0.65822977),
        (0.1263872, 0.6706524),
        (0.13205457, 0.68279314),
        (0.13789737, 0.69465476),
        (0.14392, 0.70624),
        (0.15012683, 0.71755165),
        (0.15652224, 0.72859246),
        (0.16311061, 0.7393652),
        (0.16989632, 0.7498726),
        (0.17688376, 0.7601175),
        (0.18407728, 0.77010256),
        (0.19148129, 0.7798306),
        (0.19910017, 0.7893043),
        (0.20693827, 0.7985265),
        (0.215, 0.8075),
        (0.22328973, 0.81622744),
        (0.23181184, 0.8247117),
        (0.24057071, 0.8329554),
        (0.24957073, 0.84096146),
        (0.25881624, 0.8487325),
        (0.26831168, 0.8562714),
        (0.2780614, 0.86358076),
        (0.28806975, 0.8706635),
        (0.29834118, 0.87752235),
        (0.30888, 0.88416),
        (0.31969064, 0.8905793),
        (0.33077744, 0.8967829),
        (0.34214482, 0.9027736),
        (0.35379714, 0.90855426),
        (0.36573875, 0.91412747),
        (0.3779741, 0.9194962),
        (0.3905075, 0.924663),
        (0.40334335, 0.9296307),
        (0.41648608, 0.93440217),
        (0.42994002, 0.93898),
        (0.44370952, 0.94336706),
        (0.45779905, 0.9475661),
        (0.4722129, 0.9515798),
        (0.48695552, 0.955411),
        (0.50203127, 0.9590625),
        (0.5174445, 0.96253693),
        (0.5331996, 0.9658372),
        (0.54930097, 0.96896595),
        (0.565753, 0.9719259),
        (0.58256, 0.97472),
        (0.59972644, 0.97735083),
        (0.61725664, 0.97982126),
        (0.635155, 0.98213404),
        (0.65342593, 0.98429185),
        (0.6720738, 0.9862975),
        (0.69110286, 0.98815376),
        (0.7105177, 0.9898634),
        (0.73032254, 0.9914291),
        (0.7505219, 0.99285376),
        (0.77112, 0.99414),
        (0.79212135, 0.99529064),
        (0.81353027, 0.9963085),
        (0.8353511, 0.9971962),
        (0.85758835, 0.99795663),
        (0.8802462, 0.9985925),
        (0.90332925, 0.9991066),
        (0.9268418, 0.9995016),
        (0.95078814, 0.9997803),
        (0.97517276, 0.9999455),
        (1.0, 1.0),
    ]
);

interpolator!(
    EaseOutCubic,
    vec![
        (0.0, 0.0),
        (0.00642808, 0.01823383),
        (0.01281464, 0.03633464),
        (0.01916316, 0.05430141),
        (0.02547712, 0.072133124),
        (0.03176, 0.08982875),
        (0.03801528, 0.10738728),
        (0.04424644, 0.12480769),
        (0.05045696, 0.14208896),
        (0.056650322, 0.15923007),
        (0.06283, 0.17623),
        (0.068999484, 0.19308773),
        (0.07516224, 0.20980224),
        (0.08132176, 0.22637251),
        (0.08748152, 0.24279752),
        (0.093645, 0.25907627),
        (0.09981568, 0.2752077),
        (0.10599704, 0.2911908),
        (0.11219256, 0.30702457),
        (0.11840572, 0.32270798),
        (0.12464, 0.33824),
        (0.13089888, 0.35361964),
        (0.13718584, 0.36884585),
        (0.14350437, 0.38391763),
        (0.14985792, 0.39883393),
        (0.15625, 0.41359377),
        (0.16268408, 0.42819607),
        (0.16916364, 0.4426399),
        (0.17569216, 0.45692417),
        (0.18227312, 0.47104788),
        (0.18891, 0.48501),
        (0.19560628, 0.49880955),
        (0.20236544, 0.51244545),
        (0.20919096, 0.5259167),
        (0.21608631, 0.5392223),
        (0.223055, 0.55236125),
        (0.23010048, 0.5653325),
        (0.23722623, 0.578135),
        (0.24443576, 0.59076774),
        (0.25173253, 0.60322976),
        (0.25912, 0.61552),
        (0.26660168, 0.62763745),
        (0.27418104, 0.639581),
        (0.28186154, 0.65134984),
        (0.28964671, 0.6629427),
        (0.29754, 0.6743588),
        (0.30554488, 0.6855969),
        (0.31366482, 0.6966561),
        (0.32190335, 0.7075354),
        (0.3302639, 0.7182337),
        (0.33875, 0.72875),
        (0.34736508, 0.73908335),
        (0.35611263, 0.74923265),
        (0.36499617, 0.75919694),
        (0.37401912, 0.76897514),
        (0.383185, 0.77856624),
        (0.39249727, 0.7879693),
        (0.40195945, 0.7971832),
        (0.41157496, 0.80620694),
        (0.42134732, 0.8150396),
        (0.43128, 0.82368),
        (0.44137648, 0.8321272),
        (0.45164025, 0.84038025),
        (0.46207476, 0.848438),
        (0.47268352, 0.8562995),
        (0.48347, 0.8639638),
        (0.49443766, 0.8714297),
        (0.50559, 0.8786963),
        (0.5169306, 0.8857626),
        (0.5284627, 0.8926275),
        (0.54019, 0.89929),
        (0.55211586, 0.90574914),
        (0.56424385, 0.9120038),
        (0.57657737, 0.9180531),
        (0.5891199, 0.9238959),
        (0.601875, 0.9295313),
        (0.61484605, 0.9349581),
        (0.6280366, 0.9401754),
        (0.64145017, 0.94518214),
        (0.6550901, 0.9499774),
        (0.66896, 0.95456),
        (0.68306327, 0.958929),
        (0.69740343, 0.96308345),
        (0.711984, 0.96702224),
        (0.7268083, 0.9707443),
        (0.74188, 0.97424877),
        (0.7572025, 0.9775345),
        (0.7727792, 0.9806005),
        (0.78861374, 0.98344576),
        (0.8047095, 0.98606926),
        (0.82107, 0.98847),
        (0.8376987, 0.99064696),
        (0.85459906, 0.992599),
        (0.87177455, 0.99432534),
        (0.8892287, 0.9958247),
        (0.906965, 0.99709624),
        (0.9249869, 0.9981389),
        (0.94329786, 0.9989516),
        (0.96190137, 0.99953336),
        (0.9808009, 0.9998832),
        (1.0, 1.0),
    ]
);

interpolator!(
    EaseInCubic,
    vec![
        (0.0, 0.0),
        (0.016373126, 0.0016745949),
        (0.032495, 0.00340076),
        (0.048369378, 0.005182065),
        (0.064, 0.00702208),
        (0.07939063, 0.008924375),
        (0.094545, 0.01089252),
        (0.10946688, 0.012930085),
        (0.12416, 0.01504064),
        (0.13862813, 0.017227754),
        (0.152875, 0.019495),
        (0.16690437, 0.021845944),
        (0.18072, 0.02428416),
        (0.19432563, 0.026813215),
        (0.207725, 0.02943668),
        (0.22092187, 0.032158125),
        (0.23392001, 0.03498112),
        (0.24672313, 0.037909236),
        (0.259335, 0.04094604),
        (0.2717594, 0.044095106),
        (0.284, 0.04736),
        (0.29606062, 0.050744295),
        (0.307945, 0.05425156),
        (0.31965688, 0.057885364),
        (0.3312, 0.061649278),
        (0.34257814, 0.06554688),
        (0.35379502, 0.06958172),
        (0.3648544, 0.07375739),
        (0.37576002, 0.07807744),
        (0.38651565, 0.08254545),
        (0.397125, 0.087165),
        (0.40759188, 0.09193964),
        (0.41792, 0.09687296),
        (0.42811313, 0.10196851),
        (0.43817502, 0.10722988),
        (0.4481094, 0.112660624),
        (0.45792, 0.11826432),
        (0.46761063, 0.12404454),
        (0.477185, 0.13000484),
        (0.4866469, 0.13614881),
        (0.49600002, 0.14248),
        (0.5052481, 0.149002),
        (0.514395, 0.15571836),
        (0.52344435, 0.16263266),
        (0.5324, 0.16974849),
        (0.5412656, 0.17706938),
        (0.550045, 0.18459892),
        (0.55874187, 0.19234069),
        (0.56736, 0.20029823),
        (0.5759031, 0.20847516),
        (0.584375, 0.216875),
        (0.5927794, 0.22550134),
        (0.60112, 0.23435776),
        (0.60940063, 0.24344781),
        (0.617625, 0.25277507),
        (0.62579685, 0.26234314),
        (0.63392, 0.27215552),
        (0.6419981, 0.28221583),
        (0.650035, 0.29252765),
        (0.6580344, 0.3030945),
        (0.666, 0.31392),
        (0.67393565, 0.3250077),
        (0.681845, 0.33636117),
        (0.6897319, 0.34798396),
        (0.6976, 0.35987967),
        (0.70545316, 0.37205186),
        (0.713295, 0.3845041),
        (0.72112936, 0.39723998),
        (0.72896004, 0.41026303),
        (0.73679066, 0.42357686),
        (0.74462503, 0.437185),
        (0.75246686, 0.45109105),
        (0.76032, 0.46529856),
        (0.7681881, 0.4798111),
        (0.776075, 0.49463227),
        (0.78398436, 0.5097656),
        (0.79192, 0.52521473),
        (0.79988563, 0.54098314),
        (0.807885, 0.5570744),
        (0.8159219, 0.5734922),
        (0.824, 0.59024),
        (0.8321231, 0.6073214),
        (0.840295, 0.62473994),
        (0.8485194, 0.64249927),
        (0.8568, 0.66060287),
        (0.8651406, 0.6790544),
        (0.873545, 0.6978573),
        (0.8820169, 0.71701527),
        (0.89056003, 0.73653185),
        (0.89917815, 0.75641054),
        (0.907875, 0.776655),
        (0.91665435, 0.79726875),
        (0.92552, 0.81825536),
        (0.9344756, 0.8396184),
        (0.943525, 0.8613615),
        (0.9526719, 0.8834881),
        (0.96192, 0.9060019),
        (0.9712731, 0.92890644),
        (0.980735, 0.95220524),
        (0.99030936, 0.9759019),
        (1.0, 1.0),
    ]
);

interpolator!(
    EaseOutSine,
    vec![
        (0.0, 0.0),
        (0.011635975, 0.017204724),
        (0.023145799, 0.0343178),
        (0.034532323, 0.051337574),
        (0.0457984, 0.0682624),
        (0.056946874, 0.08509062),
        (0.067980595, 0.101820596),
        (0.07890242, 0.11845067),
        (0.0897152, 0.1349792),
        (0.10042177, 0.15140451),
        (0.111025, 0.167725),
        (0.121527724, 0.18393897),
        (0.1319328, 0.2000448),
        (0.14224307, 0.21604082),
        (0.1524614, 0.2319254),
        (0.16259062, 0.24769688),
        (0.17263359, 0.2633536),
        (0.18259317, 0.27889392),
        (0.19247219, 0.2943162),
        (0.20227352, 0.30961877),
        (0.212, 0.32479998),
        (0.22165447, 0.33985823),
        (0.2312398, 0.3547918),
        (0.24075882, 0.36959907),
        (0.2502144, 0.3842784),
        (0.25960937, 0.39882812),
        (0.2689466, 0.4132466),
        (0.2782289, 0.42753217),
        (0.2874592, 0.4416832),
        (0.29664028, 0.455698),
        (0.305775, 0.469575),
        (0.31486621, 0.48331246),
        (0.3239168, 0.49690878),
        (0.33292958, 0.5103623),
        (0.34190738, 0.5236714),
        (0.35085312, 0.53683436),
        (0.35976958, 0.54984957),
        (0.36865968, 0.5627154),
        (0.3775262, 0.5754302),
        (0.38637203, 0.58799225),
        (0.39519998, 0.6004),
        (0.40401298, 0.6126517),
        (0.41281378, 0.6247458),
        (0.42160532, 0.63668054),
        (0.4303904, 0.64845437),
        (0.43917188, 0.6600656),
        (0.4479526, 0.6715126),
        (0.45673543, 0.6827937),
        (0.46552318, 0.6939072),
        (0.47431877, 0.7048515),
        (0.483125, 0.715625),
        (0.49194473, 0.726226),
        (0.5007808, 0.7366528),
        (0.50963604, 0.74690384),
        (0.5185134, 0.7569774),
        (0.52741563, 0.76687187),
        (0.5363456, 0.7765856),
        (0.54530615, 0.7861169),
        (0.5543002, 0.7954642),
        (0.56333053, 0.80462575),
        (0.5724, 0.8136),
        (0.5815115, 0.8223852),
        (0.5906678, 0.8309798),
        (0.5998718, 0.83938205),
        (0.6091264, 0.8475904),
        (0.61843437, 0.8556031),
        (0.6277986, 0.8634186),
        (0.63722193, 0.87103516),
        (0.6467072, 0.87845117),
        (0.6562573, 0.885665),
        (0.665875, 0.892675),
        (0.6755632, 0.89947945),
        (0.6853248, 0.9060768),
        (0.6951626, 0.91246533),
        (0.7050794, 0.9186434),
        (0.7150781, 0.92460936),
        (0.7251616, 0.93036157),
        (0.73533267, 0.9358984),
        (0.7455942, 0.9412182),
        (0.755949, 0.9463193),
        (0.7664, 0.9512),
        (0.77695, 0.9558587),
        (0.78760177, 0.96029377),
        (0.7983583, 0.9645036),
        (0.8092224, 0.9684864),
        (0.82019687, 0.9722406),
        (0.8312846, 0.9757646),
        (0.8424884, 0.97905666),
        (0.8538112, 0.9821152),
        (0.8652558, 0.9849385),
        (0.876825, 0.987525),
        (0.88852173, 0.989873),
        (0.9003488, 0.9919808),
        (0.91230905, 0.99384683),
        (0.9244054, 0.9954694),
        (0.9366406, 0.99684685),
        (0.9490176, 0.9979776),
        (0.96153915, 0.99885994),
        (0.9742082, 0.9994922),
        (0.9870275, 0.9998728),
        (1.0, 1.0)
    ]
);

interpolator!(
    EaseInCirc,
    vec![
        (0.0, 0.0),
        (0.01793386, 0.001276615),
        (0.03573488, 0.00270692),
        (0.053402223, 0.0042916047),
        (0.07093504, 0.00603136),
        (0.088332504, 0.007926875),
        (0.10559376, 0.00997884),
        (0.122717984, 0.012187945),
        (0.13970433, 0.01455488),
        (0.15655194, 0.017080335),
        (0.17326, 0.019765),
        (0.18982767, 0.022609565),
        (0.20625408, 0.02561472),
        (0.22253843, 0.028781155),
        (0.23867984, 0.03210956),
        (0.2546775, 0.035600625),
        (0.27053058, 0.03925504),
        (0.2862382, 0.043073494),
        (0.30179954, 0.04705668),
        (0.31721374, 0.051205285),
        (0.33248, 0.05552),
        (0.34759748, 0.060001515),
        (0.36256528, 0.06465052),
        (0.37738264, 0.06946771),
        (0.39204866, 0.07445376),
        (0.4065625, 0.07960938),
        (0.42092338, 0.08493524),
        (0.4351304, 0.09043205),
        (0.44918272, 0.09610048),
        (0.46307954, 0.101941235),
        (0.47682002, 0.107955),
        (0.49040326, 0.11414246),
        (0.50382847, 0.12050432),
        (0.51709485, 0.12704125),
        (0.53020144, 0.13375396),
        (0.5431475, 0.14064312),
        (0.55593216, 0.14770944),
        (0.5685546, 0.1549536),
        (0.5810139, 0.16237628),
        (0.59330934, 0.16997819),
        (0.60544, 0.17776),
        (0.61740506, 0.18572241),
        (0.6292037, 0.19386612),
        (0.64083505, 0.2021918),
        (0.6522983, 0.21070017),
        (0.6635925, 0.21939188),
        (0.67471695, 0.22826764),
        (0.6856708, 0.23732814),
        (0.69645315, 0.24657409),
        (0.70706314, 0.25600615),
        (0.71750003, 0.265625),
        (0.7277629, 0.27543136),
        (0.7378509, 0.28542593),
        (0.7477632, 0.29560935),
        (0.75749904, 0.30598235),
        (0.76705754, 0.31654564),
        (0.77643776, 0.32729983),
        (0.785639, 0.3382457),
        (0.79466033, 0.3493839),
        (0.80350095, 0.3607151),
        (0.81216, 0.37224),
        (0.8206367, 0.38395932),
        (0.8289301, 0.39587373),
        (0.8370394, 0.4079839),
        (0.84496385, 0.42029056),
        (0.8527025, 0.4327944),
        (0.8602546, 0.44549605),
        (0.8676192, 0.45839626),
        (0.87479556, 0.4714957),
        (0.88178277, 0.48479503),
        (0.88858, 0.498295),
        (0.8951865, 0.51199627),
        (0.9016013, 0.5258995),
        (0.9078236, 0.54000545),
        (0.91385263, 0.5543148),
        (0.9196875, 0.5688281),
        (0.92532736, 0.5835462),
        (0.9307714, 0.5984698),
        (0.9360187, 0.6135995),
        (0.94106853, 0.628936),
        (0.94592, 0.64448),
        (0.95057225, 0.66023225),
        (0.9550245, 0.6761933),
        (0.95927584, 0.69236404),
        (0.96332544, 0.70874494),
        (0.9671725, 0.72533685),
        (0.9708162, 0.7421405),
        (0.97425556, 0.75915635),
        (0.97748995, 0.7763853),
        (0.98051834, 0.79382795),
        (0.98334, 0.811485),
        (0.98595405, 0.82935715),
        (0.9883597, 0.84744513),
        (0.990556, 0.86574954),
        (0.99254227, 0.88427114),
        (0.99431753, 0.9030106),
        (0.99588096, 0.92196864),
        (0.9972318, 0.9411459),
        (0.9983691, 0.9605431),
        (0.99929214, 0.9801609),
        (1.0, 1.0),
    ]
);
